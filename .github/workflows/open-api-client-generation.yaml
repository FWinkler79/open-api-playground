name: OpenAPI Client Generator
run-name: OpenAPI Client Generator Github Action ðŸš€
on: [push]
jobs:
  generate-java-client:
    name: Generate Java Client
    permissions:
      contents: write # required for release action.
    runs-on: ubuntu-latest
    steps:

      # Checkout your code
      - name: Checkout
        uses: actions/checkout@v2

      # Generate your OpenAPI document (if you don't write it manually)

      # Use the action to generate a client package
      # This uses the default path for the openapi document and thus assumes there is an openapi.json in the current workspace.
      - name: Generate Java Client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          openapi-file: openapi.yaml
          generator: java
          config-file: generator-config-java.yaml

      - name: Zip Generated Client Sources
        run: |
          echo "Zipping generated Java client sources."
          zip -9 -r java-client-src.zip java-client

      # see: https://github.com/marketplace/actions/create-release
      - name: Create Java Client Sources Release
        uses: ncipollo/release-action@v1
        with:
          tag: main
          commit: ${{github.sha}} # see: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
          artifacts: java-client-src.zip
          artifactContentType: application/zip
          allowUpdates: true


      # Steps to build the generated Java Client.
      # - name: Set up JDK
      #   uses: actions/setup-java@v4
      #   with:
      #     java-version: 21
      #     distribution: sapmachine # see: https://github.com/actions/setup-java?tab=readme-ov-file#supported-distributions
      #     #cache: maven
      #     #cache-dependency-path: ${{github.workspace}}/java-client/pom.xml

      # - name: Build with Maven
      #   run: mvn -B clean package --no-transfer-progress --file java-client/pom.xml

  generate-documentation:
    name: Generate API Documentation
    permissions:
      contents: write # required for release action.
    runs-on: ubuntu-latest
    steps:
      # Checkout your code
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate OpenAPI Documentation
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          openapi-file: openapi.yaml
          generator: html2

      # see: https://github.com/marketplace/actions/create-release
      - name: Create Documentation Release
        uses: ncipollo/release-action@v1
        with:
          tag: main
          commit: ${{github.sha}} # see: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
          artifacts: html2-client/index.html
          artifactContentType: application/html
          allowUpdates: true


